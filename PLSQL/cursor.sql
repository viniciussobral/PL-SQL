CREATE TABLE EMP (
EMPNO INT,
ENAME VARCHAR(50)

);

INSERT INTO EMP (EMPNO, ENAME) VALUES (34843,'JALLES MACHADO');
INSERT INTO EMP (EMPNO, ENAME) VALUES (65465,'SOLVE PLAN');
INSERT INTO EMP (EMPNO, ENAME) VALUES (09267,'BANDTEC');
INSERT INTO EMP (EMPNO, ENAME) VALUES (76450,'WISEUP');

-- EXEMPLO DE %NOTFOUND E O CURSOR PEGANDO LINHA POR LINHA PELO FETCH
DECLARE 
   CURSOR C_EMP IS 
      SELECT EMPNO, ENAME
      FROM EMP
         ORDER BY EMPNO;

V_ID   EMP.EMPNO%TYPE;
V_NOME EMP.ENAME%TYPE;

BEGIN
   OPEN C_EMP;

LOOP
  FETCH C_EMP INTO V_ID, V_NOME;

  EXIT WHEN C_EMP%NOTFOUND;
  
  DBMS_OUTPUT.PUT_LINE('Número da empesa: ' || V_ID || ' Nome da empresa: ' || V_NOME);
END LOOP;
CLOSE C_EMP;

END; 






-- EXEMPLO DE CURSOR COM %ROWCOUNT

DECLARE 
    CURSOR C_ORG IS
         SELECT EMPNO, ENAME
            FROM EMP;

NUM_TOTAL_ROWS NUMBER:= 0;

BEGIN
   FOR X IN C_ORG LOOP
     -- VERIFICA SE É A PRIMEIRA PASSAGEM DO LOOP 
   IF C_ORG%ROWCOUNT = 1 THEN 
       DBMS_OUTPUT.PUT_LINE('Primeira passagem!');
   END IF;
   -- ATRIBUI O VALOR 1 REFERENTE A PRIMEIRA PSSAGEM DO LOOP GERANDO UM CONTADOR
   --AQUI ELE MOSTRA A QUANTIDADE DE EMPRESAS DO VALOR INICIAL ATÉ A ÚLTIMA  
NUM_TOTAL_ROWS := C_ORG%ROWCOUNT;
DBMS_OUTPUT.PUT_LINE('EMPRESAS = ' || TO_CHAR(NUM_TOTAL_ROWS));

END LOOP;
-- AQUI ELE CONTA A QUANTIDADE DE EMPRESAS QUE TEM
IF NUM_TOTAL_ROWS > 0 THEN
DBMS_OUTPUT.NEW_LINE;
DBMS_OUTPUT.PUT_LINE('TOTAL DE EMPRESAS = ' || TO_CHAR(NUM_TOTAL_ROWS));

END IF;
END;






-- Utilizando FOR sem o %ROWCOUNT para dar o mesmo resultado apresentado anteriormente
DECLARE 
    CURSOR C_ORG IS
         SELECT EMPNO, ENAME
         FROM EMP;
     V_CONT NUMBER := 0;
     
      CURSOR C_EMP IS 
      SELECT  ENAME
      FROM EMP
         ORDER BY EMPNO;
     
     V_NOME EMP.ENAME%TYPE;
     
      

BEGIN

OPEN C_EMP;

LOOP
  FETCH C_EMP INTO V_NOME;

  EXIT WHEN C_EMP%NOTFOUND;
  
 V_CONT := V_CONT + 1;
 DBMS_OUTPUT.PUT_LINE('EMPRESA ' || V_CONT || ' ' || V_NOME );
 
END LOOP;

CLOSE C_EMP;


       DBMS_OUTPUT.PUT_LINE('TOTAL DE EMPRESAS = ' || TO_CHAR(V_CONT));
       

END;





-- Exemplo: %FOUND

 DECLARE 
    V_ORDER_NO         ITEM.ORDID%TYPE;
    V_TOT_ORDER_PRICE  ITEM.ACTUALPRICE%TYPE;
 
    CURSOR C1 IS
    SELECT ORDID, SUM(ACTUALPRICE * QTY + 1) TOTAL
    FROM ITEM
    GROUP BY ORDID;
 BEGIN
    OPEN C1;
    FETCH C1 INTO V_ORDER_NO, V_TOT_ORDER_PRICE;
    -- ENQUANTO FOR ENCONTRADO REGISTRO NO CURSOR MANTENHA O LOOP
    WHILE C1%FOUND LOOP
       UPDATE ITEM
       SET TOTAL = V_TOT_ORDER_PRICE
       WHERE ORDID = V_ORDER_NO;

     FETCH C1 INTO V_ORDER_NO, V_TOT_ORDER_PRICE;
   END LOOP;
  CLOSE C1;
 END;

SELECT * FROM ITEM;




-- SQL%NOTFOUND

BEGIN
  UPDATE EMPLOYEE SET SALARY = 100 WHERE ID = '20';
  -- SE O UPDATE NÃO ATUALIZAR NENHUMA LINHA, ELE FAZ UM INSERT DE UMA NOVA LINHA NA TABELA

IF SQL%NOTFOUND THEN 
   INSERT INTO EMPLOYEE (ID, SALARY) VALUES ('99' , 100);
   DBMS_OUTPUT.PUT_LINE('NOT FOUND');
END IF;
END;





















